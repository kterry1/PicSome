{"version":3,"sources":["pictureContext.js","components/Header.js","hooks/useHover.js","components/CartItem.js","pages/Cart.js","components/Image.js","pages/Photos.js","utils/index.js","App.js","index.js"],"names":["PictureContext","React","createContext","PictureContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","useEffect","fetch","then","response","json","data","Provider","value","toggleFavorite","id","updatedArr","map","photo","isFavorite","addItemToCart","newItem","prevItem","removeItemFromCart","prevItems","filter","item","emptyCart","Header","useContext","to","length","className","useHover","hovered","setHovered","ref","useRef","enter","leave","current","addEventListener","removeEventListener","CartItem","iconClassName","onClick","alt","src","url","width","Cart","buttonText","setButtonText","totalCostDisplay","toLocaleString","style","currency","cartItemElements","key","setTimeout","console","log","Image","img","some","Photos","imageElements","index","i","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bcbd5096.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nconst PictureContext = React.createContext();\r\n\r\nfunction PictureContextProvider({ children }) {\r\n  const [allPhotos, setAllPhotos] = useState([]);\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const url =\r\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => setAllPhotos(data));\r\n  }, []);\r\n\r\n  function toggleFavorite(id) {\r\n    const updatedArr = allPhotos.map((photo) => {\r\n      if (photo.id === id) {\r\n        return {\r\n          ...photo,\r\n          isFavorite: !photo.isFavorite,\r\n        };\r\n      }\r\n      return photo;\r\n    });\r\n\r\n    setAllPhotos(updatedArr);\r\n  }\r\n\r\n  function addItemToCart(newItem) {\r\n    setCartItems((prevItem) => [...prevItem, newItem]);\r\n  }\r\n\r\n  function removeItemFromCart(id) {\r\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n  }\r\n\r\n  function emptyCart() {\r\n    setCartItems([]);\r\n  }\r\n\r\n  return (\r\n    <PictureContext.Provider\r\n      value={{\r\n        allPhotos,\r\n        toggleFavorite,\r\n        addItemToCart,\r\n        cartItems,\r\n        removeItemFromCart,\r\n        emptyCart,\r\n      }}\r\n    >\r\n      {children}\r\n    </PictureContext.Provider>\r\n  );\r\n}\r\n\r\nexport { PictureContextProvider, PictureContext };\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PictureContext } from \"../pictureContext\";\r\n\r\nexport default function Header() {\r\n  const { cartItems } = useContext(PictureContext);\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">\r\n        <h2>Pic Some</h2>\r\n      </Link>\r\n      <Link to=\"/cart\">\r\n        {cartItems.length > 0 ? (\r\n          <i className=\"ri-shopping-cart-fill ri-fw ri-2x\"></i>\r\n        ) : (\r\n          <i className=\"ri-shopping-cart-line ri-fw ri-2x\"></i>\r\n        )}\r\n      </Link>\r\n    </header>\r\n  );\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function useHover() {\r\n  const [hovered, setHovered] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  function enter() {\r\n    setHovered(true);\r\n  }\r\n\r\n  function leave() {\r\n    setHovered(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    ref.current.addEventListener(\"mouseenter\", enter);\r\n    ref.current.addEventListener(\"mouseleave\", leave);\r\n\r\n    return () => {\r\n      ref.current.removeEventListener(\"mouseenter\", enter);\r\n      ref.current.removeEventListener(\"mouseleave\", leave);\r\n    };\r\n  }, []);\r\n\r\n  return [hovered, ref];\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { PictureContext } from \"../pictureContext\";\r\nimport useHover from \"../hooks/useHover\";\r\n\r\nexport default function CartItem({ item }) {\r\n  const [hovered, ref] = useHover();\r\n  const { removeItemFromCart } = useContext(PictureContext);\r\n  const iconClassName = hovered ? \"ri-delete-bin-fill\" : \"ri-delete-bin-line\";\r\n  return (\r\n    <div className=\"cart-item\">\r\n      <i\r\n        onClick={() => removeItemFromCart(item.id)}\r\n        className={iconClassName}\r\n        ref={ref}\r\n      ></i>\r\n      <img alt=\"picture available to buy\" src={item.url} width=\"130px\" />\r\n      <p>$5.99</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nCartItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    url: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { PictureContext } from \"../pictureContext\";\r\nimport CartItem from \"../components/CartItem\";\r\n\r\nexport default function Cart() {\r\n  const [buttonText, setButtonText] = useState(\"Place Order\");\r\n  const { cartItems, emptyCart } = useContext(PictureContext);\r\n  const totalCost = 5.99 * cartItems.length;\r\n  const totalCostDisplay = totalCost.toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n  const cartItemElements = cartItems.map((item) => (\r\n    <CartItem key={item.id} item={item} />\r\n  ));\r\n\r\n  function placeOrder() {\r\n    setButtonText(\"Ordering...\");\r\n    setTimeout(() => {\r\n      console.log(\"Order placed!\");\r\n      setButtonText(\"Place Order!\");\r\n      emptyCart();\r\n    }, 2000);\r\n  }\r\n\r\n  return (\r\n    <main className=\"cart-page\">\r\n      <h1>Check out</h1>\r\n      {cartItemElements}\r\n      <p className=\"total-cost\">Total:{totalCostDisplay} </p>\r\n      {cartItems.length > 0 ? (\r\n        <div className=\"order-button\">\r\n          <button onClick={placeOrder}>{buttonText}</button>\r\n        </div>\r\n      ) : (\r\n        <p>You have no items in your cart.</p>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { PictureContext } from \"../pictureContext\";\r\nimport useHover from \"../hooks/useHover\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Image({ className, img }) {\r\n  const [hovered, ref] = useHover();\r\n  const {\r\n    toggleFavorite,\r\n    cartItems,\r\n    addItemToCart,\r\n    removeItemFromCart,\r\n  } = useContext(PictureContext);\r\n\r\n  function heartIcon() {\r\n    if (img.isFavorite) {\r\n      return (\r\n        <i\r\n          className=\"ri-heart-fill favorite\"\r\n          onClick={() => toggleFavorite(img.id)}\r\n        ></i>\r\n      );\r\n    } else if (hovered) {\r\n      return (\r\n        <i\r\n          className=\"ri-heart-line favorite\"\r\n          onClick={() => toggleFavorite(img.id)}\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  function cartIcon() {\r\n    const alreadyInCart = cartItems.some((item) => item.id === img.id);\r\n    if (alreadyInCart) {\r\n      return (\r\n        <i\r\n          onClick={() => removeItemFromCart(img.id)}\r\n          className=\"ri-shopping-cart-fill cart\"\r\n        ></i>\r\n      );\r\n    } else if (hovered) {\r\n      return (\r\n        <i\r\n          onClick={() => addItemToCart(img)}\r\n          className=\"ri-add-circle-line cart\"\r\n        ></i>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div ref={ref} className={`${className} image-container`}>\r\n      <img\r\n        alt=\"Variety of Images to buy\"\r\n        src={img.url}\r\n        className=\"image-grid\"\r\n      />\r\n      {heartIcon()}\r\n      {cartIcon()}\r\n    </div>\r\n  );\r\n}\r\n\r\nImage.propTypes = {\r\n  className: PropTypes.string,\r\n  img: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    isFavorite: PropTypes.bool,\r\n  }),\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport Image from \"../components/Image\";\r\nimport { PictureContext } from \"../pictureContext\";\r\nimport { getClass } from \"../utils\";\r\n\r\nexport default function Photos() {\r\n  const { allPhotos } = useContext(PictureContext);\r\n\r\n  const imageElements = allPhotos.map((photo, index) => (\r\n    <Image key={photo.id} img={photo} className={getClass(index)} />\r\n  ));\r\n  return <main className=\"photos\">{imageElements}</main>;\r\n}\r\n","export function getClass(i) {\r\n  if (i % 5 === 0) {\r\n    return \"big\";\r\n  } else if (i % 6 === 0) {\r\n    return \"wide\";\r\n  }\r\n}\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Cart from \"./pages/Cart\";\nimport Photos from \"./pages/Photos\";\nimport { Switch, Route } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Photos />\n        </Route>\n        <Route exact path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { PictureContextProvider } from \"./pictureContext\";\n\nReactDOM.render(\n  <PictureContextProvider>\n    <Router>\n      <App />\n    </Router>\n  </PictureContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}